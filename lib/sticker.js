import{dirname}from"path";import{fileURLToPath}from"url";import*as fs from"fs";import*as path from"path";import*as crypto from"crypto";import{ffmpeg}from"./converter.js";import fluent_ffmpeg from"fluent-ffmpeg";import{spawn}from"child_process";import uploadFile from"./uploadFile.js";import uploadImage from"./uploadImage.js";import{fileTypeFromBuffer}from"file-type";import webp from"node-webpmux";import fetch from"node-fetch";const __dirname=dirname(fileURLToPath(import.meta.url)),tmp=path.join(__dirname,"../tmp");function sticker2(img,url){return new Promise((async(resolve,reject)=>{try{if(url){let res=await fetch(url);if(200!==res.status)throw await res.text();img=await res.buffer()}let inp=path.join(tmp,+new Date+".jpeg");await fs.promises.writeFile(inp,img);let ff=spawn("ffmpeg",["-y","-i",inp,"-vf","scale=512:512:flags=lanczos:force_original_aspect_ratio=decrease,format=rgba,pad=512:512:(ow-iw)/2:(oh-ih)/2:color=#00000000,setsar=1","-f","png","-"]);ff.on("error",reject),ff.on("close",(async()=>{await fs.promises.unlink(inp)}));let bufs=[];const[_spawnprocess,..._spawnargs]=[...module.exports.support.gm?["gm"]:module.exports.magick?["magick"]:[],"convert","png:-","webp:-"];let im=spawn(_spawnprocess,_spawnargs);im.on("error",(e=>conn.reply(m.chat,util.format(e),m))),im.stdout.on("data",(chunk=>bufs.push(chunk))),ff.stdout.pipe(im.stdin),im.on("exit",(()=>{resolve(Buffer.concat(bufs))}))}catch(e){reject(e)}}))}async function canvas(code,type="png",quality=.92){let res=await fetch("https://nurutomo.herokuapp.com/api/canvas?"+queryURL({type:type,quality:quality}),{method:"POST",headers:{"Content-Type":"text/plain","Content-Length":code.length},body:code});return await res.buffer()}function queryURL(queries){return new URLSearchParams(Object.entries(queries))}async function sticker1(img,url){url=url||await uploadImage(img);let{mime:mime}=url?{mime:"image/jpeg"}:await fileTypeFromBuffer(img),sc=`let im = await loadImg('data:${mime};base64,'+(await window.loadToDataURI('${url}')))\nc.width = c.height = 512\nlet max = Math.max(im.width, im.height)\nlet w = 512 * im.width / max\nlet h = 512 * im.height / max\nctx.drawImage(im, 256 - w / 2, 256 - h / 2, w, h)\n`;return await canvas(sc,"webp")}async function sticker3(img,url,packname,author){url=url||await uploadFile(img);let res=await fetch("https://api.xteam.xyz/sticker/wm?"+new URLSearchParams(Object.entries({url:url,packname:packname,author:author})));return await res.buffer()}async function sticker4(img,url){if(url){let res=await fetch(url);if(200!==res.status)throw await res.text();img=await res.buffer()}return await ffmpeg(img,["-vf","scale=512:512:flags=lanczos:force_original_aspect_ratio=decrease,format=rgba,pad=512:512:(ow-iw)/2:(oh-ih)/2:color=#00000000,setsar=1"],"jpeg","webp")}async function sticker5(img,url,packname,author,categories=[""],extra={}){const{Sticker:Sticker}=await import("wa-sticker-formatter");return new Sticker(img||url,{type:"default",pack:packname,author:author,categories:categories,...extra}).toBuffer()}function sticker6(img,url){return new Promise((async(resolve,reject)=>{if(url){let res=await fetch(url);if(200!==res.status)throw await res.text();img=await res.buffer()}const type=await fileTypeFromBuffer(img)||{mime:"application/octet-stream",ext:"bin"};"bin"==type.ext&&reject(img);const tmp=path.join(__dirname,`../tmp/${+new Date}.${type.ext}`),out=path.join(tmp+".webp");await fs.promises.writeFile(tmp,img),(/video/i.test(type.mime)?fluent_ffmpeg(tmp).inputFormat(type.ext):fluent_ffmpeg(tmp).input(tmp)).on("error",(function(err){console.error(err),fs.promises.unlink(tmp),reject(img)})).on("end",(async function(){fs.promises.unlink(tmp),resolve(await fs.promises.readFile(out))})).addOutputOptions(["-vcodec","libwebp","-vf","scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse"]).toFormat("webp").save(out)}))}async function addExif(webpSticker,packname,author,categories=[""],extra={}){const img=new webp.Image,json={"sticker-pack-id":crypto.randomBytes(32).toString("hex"),"sticker-pack-name":packname,"sticker-pack-publisher":author,emojis:categories,...extra};let exifAttr=Buffer.from([73,73,42,0,8,0,0,0,1,0,65,87,7,0,0,0,0,0,22,0,0,0]),jsonBuffer=Buffer.from(JSON.stringify(json),"utf8"),exif=Buffer.concat([exifAttr,jsonBuffer]);return exif.writeUIntLE(jsonBuffer.length,14,4),await img.load(webpSticker),img.exif=exif,await img.save(null)}async function sticker(img,url,...args){let lastError,stiker;for(let func of[sticker3,global.support.ffmpeg&&sticker6,sticker5,global.support.ffmpeg&&global.support.ffmpegWebp&&sticker4,global.support.ffmpeg&&(global.support.convert||global.support.magick||global.support.gm)&&sticker2,sticker1].filter((f=>f)))try{if(stiker=await func(img,url,...args),stiker.includes("WEBP"))try{return await addExif(stiker,...args)}catch(e){return console.error(e),stiker}if(stiker.includes("html"))continue;throw stiker.toString()}catch(err){lastError=err;continue}return console.error(lastError),lastError}const support={ffmpeg:!0,ffprobe:!0,ffmpegWebp:!0,convert:!0,magick:!1,gm:!1,find:!1};export{sticker,sticker1,sticker2,sticker3,sticker4,sticker5,sticker6,addExif,support};