import yargs from"yargs";import os from"os";import path from"path";import{fileURLToPath,pathToFileURL}from"url";import{createRequire}from"module";import fs from"fs";import Stream,{Readable}from"stream";const __filename=function(pathURL=import.meta,rmPrefix="win32"!==os.platform()){const path=pathURL.url||pathURL;return rmPrefix?/file:\/\/\//.test(path)?fileURLToPath(path):path:/file:\/\/\//.test(path)?path:pathToFileURL(path).href},__dirname=function(pathURL){const dir=__filename(pathURL,!0),regex=/\/$/;return regex.test(dir)?dir:fs.existsSync(dir)&&fs.statSync(dir).isDirectory()?dir.replace(regex,""):path.dirname(dir)},__require=function(dir=import.meta){const path=dir.url||dir;return createRequire(path)},checkFileExists=file=>fs.promises.access(file,fs.constants.F_OK).then((()=>!0)).catch((()=>!1)),API=(name,path="/",query={},apikeyqueryname)=>(name in global.APIs?global.APIs[name]:name)+path+(query||apikeyqueryname?"?"+new URLSearchParams(Object.entries({...query,...apikeyqueryname?{[apikeyqueryname]:global.APIKeys[name in global.APIs?global.APIs[name]:name]}:{}})):""),opts=new Object(yargs(process.argv.slice(2)).exitProcess(!1).parse()),prefix=new RegExp("^["+(opts.prefix||"‎xzXZ/i!#$%+£¢€¥^°=¶∆×÷π√✓©®:;?&.\\-").replace(/[|\\{}()[\]^$+*?.\-\^]/g,"\\$&")+"]"),saveStreamToFile=(stream,file)=>new Promise(((resolve,reject)=>{const writable=stream.pipe(fs.createWriteStream(file));writable.once("finish",(()=>{resolve(),writable.destroy()})),writable.once("error",(()=>{reject(),writable.destroy()}))})),kDestroyed=Symbol("kDestroyed"),kIsReadable=Symbol("kIsReadable"),isReadableNodeStream=(obj,strict=!1)=>!(!obj||"function"!=typeof obj.pipe||"function"!=typeof obj.on||strict&&("function"!=typeof obj.pause||"function"!=typeof obj.resume)||obj._writableState&&!1===obj._readableState?.readable||obj._writableState&&!obj._readableState),isNodeStream=obj=>obj&&(obj._readableState||obj._writableState||"function"==typeof obj.write&&"function"==typeof obj.on||"function"==typeof obj.pipe&&"function"==typeof obj.on),isDestroyed=stream=>{if(!isNodeStream(stream))return null;const wState=stream._writableState,rState=stream._readableState,state=wState||rState;return!!(stream.destroyed||stream[kDestroyed]||state?.destroyed)},isReadableFinished=(stream,strict)=>{if(!isReadableNodeStream(stream))return null;const rState=stream._readableState;return!rState?.errored&&("boolean"!=typeof rState?.endEmitted?null:!!(rState.endEmitted||!1===strict&&!0===rState.ended&&0===rState.length))},isReadableStream=stream=>"function"==typeof Stream.isReadable?Stream.isReadable(stream):stream&&null!=stream[kIsReadable]?stream[kIsReadable]:"boolean"!=typeof stream?.readable?null:!isDestroyed(stream)&&(isReadableNodeStream(stream)&&!!stream.readable&&!isReadableFinished(stream)||stream instanceof fs.ReadStream||stream instanceof Readable);export default{__filename:__filename,__dirname:__dirname,__require:__require,checkFileExists:checkFileExists,API:API,saveStreamToFile:saveStreamToFile,isReadableStream:isReadableStream,opts:opts,prefix:prefix};